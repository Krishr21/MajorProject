<% layout('/layouts/boilerplate.ejs') %>
<!-- Leaflet CSS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="anonymous" />
<style>
  #map {
    width: 100%;
    height: 400px;
    border-radius: 0.75rem;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    border: 2px solid #f8f9fa;
    margin-bottom: 1.5rem;
  }
  .map-container {
    background-color: #f8f9fa;
    padding: 1.25rem;
    border-radius: 0.75rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }
  .map-title {
    margin-bottom: 1rem;
    color: #343a40;
    font-weight: 600;
  }
  .leaflet-popup-content-wrapper {
    border-radius: 0.5rem;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);
  }
  .leaflet-popup-content {
    margin: 0.75rem 1rem;
    font-family: inherit;
  }
  .map-popup-title {
    font-weight: bold;
    color: #212529;
    margin-bottom: 0.25rem;
  }
  .map-popup-location {
    color: #6c757d;
  }
</style>

<div class="row mt-3">
    <div class="col-8 offset-3">
    <h3><%= listing.title %></h3>
    </div>
        <div class="card col-6 offset-3 show-card listing-card" >
            <img src="<%= listing.image.url %>" class="card-img-top show-img" alt="listing_image" />
            <div class="card-body">
              <p class="card-text"><i >Owner : <%= listing.owner.username %></i><br></p>
              <p class="card-text">Description : <%= listing.description %><br></p>
              <p class="card-text">Price : &#8377; <%= listing.price.toLocaleString("en-IN") %><br></p>
              <p class="card-text">Location : <%= listing.location %><br></p>
              <p class="card-text"> Country : <%= listing.country %><br></p>
            </p>
            </div>
        </div>

    <% if(currentUser && currentUser._id.equals(listing.owner._id)) { %>
    <br />
    <div class="btns">
    <a href="/listings/<%= listing._id %>/edit" class="btn btn-dark col-1 offset-3 edit-btn">Edit </a>
    <form method="POST" action="/listings/<%= listing._id %>?_method=DELETE">
        <button class="btn btn-dark offset-5">Delete</button>
    </form>
    </div>
    <br />
    <% } %>

    <div class="col-8 offset-3 mb-3">
    <hr />
    <% if(currentUser) { %>
    <h4>Leave a Review</h4>
    <form method="POST" action="/listings/<%= listing._id %>/reviews" novalidate class="needs-validation">
       
        <div class="mb-3 mt-3" >
        <label for="rating" class="form-label">Rating</label>
        <fieldset class="starability-slot">
            <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" value="1" checked aria-label="No rating." />
            <input type="radio" id="first-rate1" name="review[rating]" value="1" />
            <label for="first-rate1" title="Terrible">1 star</label>
            <input type="radio" id="first-rate2" name="review[rating]" value="2" />
            <label for="first-rate2" title="Not good">2 stars</label>
            <input type="radio" id="first-rate3" name="review[rating]" value="3" />
            <label for="first-rate3" title="Average">3 stars</label>
            <input type="radio" id="first-rate4" name="review[rating]" value="4" />
            <label for="first-rate4" title="Very good">4 stars</label>
            <input type="radio" id="first-rate5" name="review[rating]" value="5" />
            <label for="first-rate5" title="Amazing">5 stars</label>
        </fieldset>
        </div>
        <div class="mb-3 mt-3">
            <label for="comment" class="form-label">Comments</label>
            <textarea class="form-control" id="comment" name="review[comment]" rows="5" required></textarea>
        </div>
        <div class="invalid-feedback">
            Please enter a valid feedback for the review.
        </div>
        <button type="submit" class="btn btn-outline-dark">Submit</button>
    </form>
    <hr />
    <% } %>

    <p><b>All Reviews</b></p>
    <div class="row">
    <% for (review of listing.reviews) { %>
        <div class="card col-5 ms-3 mb-3">
            <div class="card-body">
                <h5 class="card-title">@<%= review.author.username %></h5>
                <p class="starability-result card-text" data-rating="<%= review.rating %>">
                    Rated: 3 stars
                </p>
                <h5 class="card-subtitle mb-2 text-muted">
                    <%= review.createdAt.toLocaleString() %>
                </h5>
                <p class="card-text">Comment: <%= review.comment %></p>
            </div>
            <form method="POST" class="mb-3 mt-3" action="/listings/<%= listing._id %>/reviews/<%= review._id %>?_method=DELETE">
                <button class="btn btn-sm btn-dark">Delete</button>
            </form>
        </div>
    <% } %>
    </div>
    </div>
    
    <!-- Map Container (Moved below reviews) -->
    <div class="col-6 offset-3 mt-4 mb-4">
      <div class="map-container">
        <h4 class="map-title">Location on Map</h4>
        <div id="map"></div>
      </div>
    </div>
</div>

<!-- Leaflet JS -->
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin="anonymous"></script>

<script>
document.addEventListener('DOMContentLoaded', function() {
  try {
    // Check if listing geometry and coordinates exist
    const coordinates = <%= JSON.stringify(listing.geometry && listing.geometry.coordinates ? listing.geometry.coordinates : [0, 0]) %>;
    const defaultZoom = coordinates[0] === 0 && coordinates[1] === 0 ? 2 : 13; // Lower zoom if default coords
    
    // Fix for GeoJSON coordinates (longitude, latitude) to Leaflet format (latitude, longitude)
    // Always swap coordinates properly for Leaflet regardless of values
    const mapCenter = [coordinates[1], coordinates[0]]; // Swap coordinates for Leaflet
    
    // If coordinates are default [0,0], use a fallback center point for India
    const useDefaultCenter = coordinates[0] === 0 && coordinates[1] === 0;
    const defaultCenter = [15.2993, 74.1240]; // Coordinates for Goa, India
    const displayCenter = useDefaultCenter ? defaultCenter : mapCenter;

    // Initialize the map with proper center point
    const map = L.map('map').setView(displayCenter, defaultZoom);

    // Add tile layer
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    // Always add a marker - either at the actual location or at the default Goa location
    const customIcon = L.icon({
      iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',
      iconSize: [25, 41],
      iconAnchor: [12, 41],
      popupAnchor: [1, -34],
      shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',
      shadowSize: [41, 41]
    });
    
    L.marker(displayCenter, {icon: customIcon})
      .addTo(map)
      .bindPopup(`
        <div class="map-popup-content">
          <div class="map-popup-title"><%= listing.title %></div>
          <div class="map-popup-location"><%= listing.location %>, <%= listing.country %></div>
        </div>
      `)
      .openPopup();
      
    // Add a subtle circle around the marker to highlight the area
    L.circle(displayCenter, {
      color: '#4a89dc',
      fillColor: '#4a89dc',
      fillOpacity: 0.1,
      radius: 1000
    }).addTo(map);
      
    // Log coordinates for debugging
    console.log('Original GeoJSON coordinates:', coordinates);
    console.log('Leaflet map center:', mapCenter);
  } catch (err) {
    console.error("Error initializing map:", err);
  }
});
</script>